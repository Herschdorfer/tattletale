<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="jboss-tattletale" 
         default="dist" 
         basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="build.dir" value="${basedir}/build"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="doc.api.dir" value="${doc.dir}/api"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="src.main.dir" value="${src.dir}/main"/>
    <property name="src.java.dir" value="${src.main.dir}/java"/>
    <property name="etc.dir" value="${src.dir}/etc"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="reports.dir" value="${basedir}/reports"/>
    <property name="tools.dir" value="${basedir}/tools"/>

    <property name="name" value="jboss-tattletale"/>
    <property name="major" value="1"/>
    <property name="minor" value="1"/>
    <property name="patch" value="0"/>
    <property name="type" value="Beta1"/>

    <property name="jboss-tattletale.jar" value="jboss-tattletale.jar"/>

    <!-- ================================= 
         Repositories              
         ================================= -->
    <property name="central.repo" value="http://repo1.maven.org/maven2"/>
    <property name="jboss.repo" value="http://repository.jboss.org/maven2"/>
    <property name="snapshots.repo" value="http://snapshots.jboss.org/maven2"/>
  
    <!-- ================================= 
         Versions              
         ================================= -->
    <property name="version.ant" value="1.6.5"/>
    <property name="version.javassist" value="3.11.0.GA"/>
    
    <!-- =================================================================== -->
    <!-- Define the class path                                               -->
    <!-- =================================================================== -->
    <path id="class.path">
        <fileset dir="${lib.dir}/core">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test.class.path">
        <fileset dir="${lib.dir}/test">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${dist.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="checkstyle.class.path">
        <fileset dir="${tools.dir}/checkstyle/lib"/>
        <fileset dir="${lib.dir}/core">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${dist.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- =================================================================== -->
    <!-- Initialize                                                          -->
    <!-- =================================================================== -->
    <target name="init">
       <ivy:settings file="${basedir}/ivy.settings.xml"/>
    </target>

    <!-- ================================= 
         Target: resolve              
         ================================= -->
    <target name="resolve" depends="init">
       <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact].[ext]" sync="true"/>
    </target>
  
    <!-- =================================================================== -->
    <!-- Prepares the directory structure                                    -->
    <!-- =================================================================== -->
    <target name="prepare" depends="init">
       <mkdir dir="${build.dir}"/>
       <mkdir dir="${dist.dir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Jars                                                                -->
    <!-- =================================================================== -->
    <target name="jars" depends="prepare,resolve">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
        <javac
            destdir="${build.dir}"
            classpathref="class.path"
            debug="on"
            deprecation="on"
            optimize="off"
            source="1.5"
            target="1.5"
            >
            <src path="${src.java.dir}"/>
        </javac>
        <copy todir="${build.dir}">
            <fileset dir="${etc.dir}">
               <include name="**/jboss-tattletale.properties"/>
            </fileset>
            <fileset dir="${etc.dir}">
               <include name="**/*.clz"/>
            </fileset>
            <fileset dir="${etc.dir}">
               <include name="**/*.css"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}/org/jboss/tattletale/ant">
            <fileset dir="${etc.dir}">
               <include name="antlib.xml"/>
            </fileset>
        </copy>
        <jar destfile="${dist.dir}/${jboss-tattletale.jar}"
             basedir="${build.dir}"
             manifest="${etc.dir}/manifest.mf"
             includes="org/jboss/tattletale/**,**/*.properties,**/*.clz,**/*.css"
             excludes="**/*.java"/>
    </target>

    <!-- =================================================================== -->
    <!-- Doc                                                                 -->
    <!-- =================================================================== -->
    <target name="doc">
        <mkdir dir="${doc.api.dir}"/>
        <javadoc packagenames="org.*"
                 sourcepath="${src.java.dir}"
                 destdir="${doc.api.dir}"
                 author="true"
                 version="true"
                 windowtitle="JBoss Tattletale"
                 doctitle="JBoss Tattletale"
                 use="true"
                 classpathref="class.path"
                 bottom="Copyright &#169; 2009 JBoss (http://www.jboss.com/)">
             <link offline="true" href="http://java.sun.com/j2se/1.5/docs/api/" packagelistLoc="${java.home}/../docs/api"/>
        </javadoc>
        <ant dir="doc/userguide" target="pdf"/>
        <ant dir="doc/developerguide" target="pdf"/>
    </target>

    <!-- =================================================================== -->
    <!-- Dist                                                                -->
    <!-- =================================================================== -->
    <target name="dist" depends="jars">
        <copy todir="${dist.dir}">
            <fileset dir="${lib.dir}/core">
               <include name="**/*.jar"/>
               <exclude name="**/ant.jar"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${etc.dir}">
               <include name="**/log4j.xml"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${etc.dir}">
               <include name="**/*.properties"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${doc.dir}">
               <include name="*.txt"/>
               <include name="*.html"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Release                                                             -->
    <!-- =================================================================== -->
    <target name="release" depends="clean,dist">
        <delete dir="${build.dir}"/>

        <ant dir="doc/userguide" target="pdf"/>
        <ant dir="doc/developerguide" target="pdf"/>

        <mkdir dir="${build.dir}/${name}-${major}.${minor}.${patch}.${type}"/>

        <move flatten="true" todir="${build.dir}/${name}-${major}.${minor}.${patch}.${type}">
          <fileset dir="${build.dir}">
            <include name="**/*.pdf"/>
          </fileset>
        </move>

        <delete dir="${build.dir}/en"/>

        <move todir="${build.dir}/${name}-${major}.${minor}.${patch}.${type}"
              includeEmptyDirs="false">
            <fileset dir="${dist.dir}"/>
        </move>

        <zip destfile="${name}-${major}.${minor}.${patch}.${type}.zip"
             basedir="${build.dir}"/>

        <tar destfile="${name}-${major}.${minor}.${patch}.${type}.tar"
             basedir="${build.dir}"/>

        <gzip zipfile="${name}-${major}.${minor}.${patch}.${type}.tar.gz" 
              src="${name}-${major}.${minor}.${patch}.${type}.tar"/>

        <bzip2 zipfile="${name}-${major}.${minor}.${patch}.${type}.tar.bz2" 
               src="${name}-${major}.${minor}.${patch}.${type}.tar"/>

        <delete file="${name}-${major}.${minor}.${patch}.${type}.tar"/>
    </target>

    <!-- ================================= 
         Target: checkstyle
         ================================= -->
    <target name="checkstyle" depends="jars">
      <taskdef name="checkstyle"
               classname="com.puppycrawl.tools.checkstyle.CheckStyleTask"
               classpathref="checkstyle.class.path"/>
      
      <mkdir dir="${reports.dir}/checkstyle" />
      
      <checkstyle config="${tools.dir}/checkstyle/checkstyle.xml"
                  failOnViolation="false"
                  classpathref="checkstyle.class.path">
        <fileset dir="${basedir}"
                 includes="**/*.java"/>
        <formatter type="plain"/>
        <formatter type="xml" toFile="${reports.dir}/checkstyle/checkstyle-result.xml"/>
      </checkstyle>
    </target>

    <!-- =================================================================== -->
    <!-- Clean                                                               -->
    <!-- =================================================================== -->
    <target name="clean">
        <delete>
          <fileset dir="${basedir}" defaultexcludes="no">
            <include name="**/*~" />
            <include name="**/*.bak"/>
          </fileset>
        </delete>
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${doc.api.dir}"/>
        <delete dir="${reports.dir}"/>
        <delete file="*.zip"/>
        <delete file="*.tar.gz"/>
        <delete file="*.tar.bz2"/>
    </target>

    <!-- ================================= 
         Target: clean-cache              
         ================================= -->
    <target name="clean-cache">
       <ivy:cleancache />
    </target>

</project>
